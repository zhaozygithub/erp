package com.dlcat.core.model;

import java.util.List;

import com.dlcat.common.BaseModel;
import com.dlcat.common.utils.StringUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class FlowTask extends BaseModel<FlowTask> {
	public static final FlowTask dao = new FlowTask().dao();
	
	/**
	 * 根据sql语句查询流程任务
	 * @param sql
	 * @return
	 * @author masai
	 * @time 2017年4月26日 上午11:25:42
	 */
	public List<FlowTask> getFlowTasksBySql(String sql) {
		List<FlowTask> datas = FlowTask.dao.find(sql);
		return datas;
	}
	/**
	 * 根据主键查询流程任务
	 * @param taskNo
	 * @return
	 * @author masai
	 * @time 2017年4月26日 上午11:34:33
	 */
	public static FlowTask getFlowTasksById(String taskNo) {
		return StringUtils.isNotBlank(taskNo) ? FlowTask.dao.findById(taskNo) : null;
	}
	/**
	 * 根据流程对象编号和节点编号获取流程任务
	 */
	public static FlowTask getFlowTaskByObjectNoAndNodeNo(String objectNo,String nodeNo){
		FlowTask tasks=FlowTask.dao.findFirst("select * from flow_task where flow_object_no=? and cur_node_no=? ",objectNo,nodeNo);
		return tasks;
	}
	/**
	 * 生成流程任务流水号
	 * 注：流程首个节点对应的流程任务流水号 eg:201705030001，不是首个节点则低增1
	 * @param flowObjectNo
	 * @return
	 * @author masai
	 * @time 2017年5月3日 下午3:58:38
	 */
	public static String generateFlowTaskNo(String flowObjectNo){
		String flowTaskNo = null;
		FlowTask fTask = null;
		if(StringUtils.isNotBlank(flowObjectNo)){
			fTask = FlowTask.dao.findFirst("select * from flow_task where flow_object_no=？ order by task_no desc", flowObjectNo); 
		}
		if(fTask != null){
			flowTaskNo = (fTask.getInt("task_no") + 1) + "";
		}else{
			flowTaskNo = flowObjectNo + "0001";
		}
		return flowTaskNo;
	}
}

