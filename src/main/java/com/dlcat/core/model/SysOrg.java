package com.dlcat.core.model;

import java.util.List;

import com.dlcat.common.BaseModel;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class SysOrg extends BaseModel<SysOrg> {
	public static final SysOrg dao = new SysOrg().dao();
	
	/**
	 * 获取当前系统中的所有机构 不区分机构状态 
	 * @return
	 * @author masai
	 * @time 2017年4月20日 下午12:18:46
	 */
	public static List<SysOrg> getSysOrgList(){
		String sql = "select * from sys_org";
		return SysOrg.dao.find(sql);
		 
	}
	
	/**
	 * 获取当前机构中所有用户
	 * @return
	 * @author masai
	 * @time 2017年4月21日 上午9:55:53
	 */
	public static List<SysUser> getBelongOrgUser(int orgId){
		String sql = "select * from sys_user where belong_org_id = ?";
		return SysUser.dao.find(sql, orgId);
	}
	/**
	 * 获取当前机构中的所有客户
	 * @param orgId
	 * @return
	 * @author masai
	 * @time 2017年4月21日 上午11:43:21
	 */
	public static List<CuObjectCustomer> getBelongCustomer(int orgId){
		String sql = "select * from cu_object_customer where belong_org_id = ?";
		return CuObjectCustomer.dao.find(sql,orgId);
	}
	
	/**
	* @author:zhaozhongyuan 
	* @Description: 根据机构ID确定层级
	* @param @param orgId
	* @param @return
	* @return int
	* @date 2017年4月24日 下午2:44:10  
	*/
	public static int getLevel(int org_id){
		if (SysOrg.dao.findById(org_id) != null) {
			return SysOrg.dao.findById(org_id).getInt("org_level");
		}else {
			return -1;
		}
		
	}
	
	/**
	* @author:zhaozhongyuan 
	* @Description:获得id集合
	* @return String   
	* @date 2017年5月4日 上午11:26:26  
	*/
	public static String  getChildrenIds(int org_id,String sqlWhere) {
		StringBuilder sb=new StringBuilder();
		String sql = "select * from sys_org where belong_org_id = ? "+sqlWhere;
		List<SysOrg> list=SysOrg.dao.find(sql,org_id);
		if (list.size()>0) {
			for (SysOrg sysOrg : list) {
				sb.append(sysOrg.getInt("org_id")+",");
			}
		}
		return sb.toString();
		
	}
	
	public static List<SysOrg> getChildren(int org_id) {
		String sql = "select * from sys_org where belong_org_id = ?";
		return SysOrg.dao.find(sql,org_id);
	}
	
	public static int getPid(int org_id) {
		String sql = "select * from sys_org where org_id = ?";
		
		if (SysOrg.dao.find(sql,org_id).size()>0) {
			return SysOrg.dao.find(sql,org_id).get(0).getInt("belong_org_id");
		}
		return -1;
		
		
	}
	
	
	
	
	
	/**
	* @author:zhaozhongyuan 
	* @Description: 获取本部以及分部的ID 
	* @param @return
	* @return String
	* @date 2017年4月26日 下午7:03:56  
	*/
	public static String getDeptAndChildren(int org_id) {
		List<SysOrg> list2=SysOrg.getChildren(org_id);
		
		StringBuilder sb=new StringBuilder();
		for (int i = 0; i < list2.size(); i++) {
		sb.append(list2.get(i).getInt("org_id")+",");
		}
		sb.append(org_id);
		return sb.toString();
	}
	
	/**
	* @author:zhaozhongyuan 
	* @Description:
	* @return String   
	* @date 2017年4月26日 下午9:10:16  
	*/
	public static String getNameById(int org_id) {
		String sql="select org_name name from sys_org where org_id = ?";
		return SysOrg.dao.findFirst(sql, org_id).getStr("name");
	}
	
	/**
	 * 根据用户编号获取 所属组织机构名称
	 * @author liuran
	 * @time 2017年5月4日 下午6:38:28
	 * @param userId
	 * @return String
	 */
	public static String getNameByUserId(int userId){
		SysUser user = SysUser.dao.findById(userId);
		return getNameById(user.getInt("belong_org_id"));
	}
	
}
