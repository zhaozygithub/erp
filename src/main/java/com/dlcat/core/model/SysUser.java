package com.dlcat.core.model;
import java.util.List;

import com.dlcat.common.BaseModel;
import com.dlcat.common.utils.CommonUtils;
import com.dlcat.common.utils.StringUtils;
import com.jfinal.kit.HashKit;
import com.jfinal.plugin.activerecord.Db;
import com.sun.org.apache.regexp.internal.recompile;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class SysUser extends BaseModel<SysUser> {
	public static final SysUser dao = new SysUser().dao();
	
	/**
	 * 所属角色是否合法
	 * time:2017年4月11日 下午2:48:12
	 * @author masai
	 */
	public Boolean isHasRole(){
		return SysRole.dao.findById(this.get("role_id")) != null ? true : false;
	}
	
	/**
	 * 所属机构是否合法
	 * time:2017年4月11日 下午2:47:52
	 * @author masai
	 */
	public Boolean isHasBelongOrg(){
		return SysOrg.dao.findById(this.get("belong_ord_id")) != null ? true : false; 
	}
	
	/**
	 * 获取当前用户的所有管户客户
	 * @param userId 	用户编号 
	 * @return
	 * @author masai
	 * @time 2017年4月21日 上午11:53:35
	 */
	public static List<CuObjectCustomer> getBelongUserList(int userId){
		String sql = "select * from cu_object_customer";
		return CuObjectCustomer.dao.find(sql,userId);
	}

	/**
	 * @Title getUserList 
	 * @Description 根据用户id获取同一机构下相同角色的所有人
	 * @param userId 用户id
	 * @return List<SysUser> 同一机构下相同角色的所有人list
	 * @author liuran 
	 * @time 2017年5月24日下午2:00:07
	 */
	public static List<SysUser> getUserList(Integer userId){
		List<SysUser> users = null;
		if (userId != null) {
			SysUser user = SysUser.dao.findById(userId);
			String sql = "select * from sys_user where role_id = ? and belong_org_id = ?";
			users = SysUser.dao.find(sql,user.getInt("role_id"),user.getInt("belong_org_id"));
			return users;
		}else {
			return users;
		}
		
		
	}

	/**
	 * @Title isRepeatName 
	 * @Description 判断name除用户本人外 是否存在
	 * @param userId 用户id
	 * @param name 名称
	 * @return boolean (true存在;false不存在)
	 * @author liuran 
	 * @time 2017年5月24日下午2:09:04
	 */
	public static boolean isRepeatName(Integer userId,String name){	
		if (userId != null && StringUtils.isNotBlank(name)) {
			List<SysUser> user = SysUser.dao.find("select * from sys_user where status = '1' and name=? and id !=?",name,userId);
			if (user.size() != 0 ) {
				return true;
			}else {
				return false;
			}
		}else {
			return false;
		}
		
		
	}
/**
 * 
 * @author liuran
 * @time 2017年5月3日 下午5:47:09
 * @param phone
 * @return boolean
 */
	/**
	 * @Title isRepeatPhone 
	 * @Description 判断手机号除用户本人外 是否存在
	 * @param userId 用户id
	 * @param phone  手机或电话
	 * @return boolean
	 * @author liuran 
	 * @time 2017年5月24日下午2:28:34
	 */
	public static boolean isRepeatPhone(Integer userId,String phone){
		if ((userId != null) && (CommonUtils.checkPhone(phone) || CommonUtils.checkTelPhone(phone))) {
			//List<SysUser> user = SysUser.dao.find("select * from sys_user where status = '1' and phone = ? and id !=?",phone,userId);
			long count = Db.queryLong("select count(*) as count  from sys_user where status = '1' and phone = ? and id !=?",phone,userId);
			if (count != 0 ) {
				return true;
			}else {
				return false;
			}
		}else {
			return false;
		}
		
	}
	
	/**
	 * @Title isRightPassword 
	 * @Description 判断用户输入密码是否正确(用户修改密码)
	 * @param userId 用户id
	 * @param password 用户所输入的密码
	 * @return boolean (true正确;false错误)
	 * @author liuran 
	 * @time 2017年5月24日下午2:30:29
	 */
	public static boolean isRightPassword(Integer userId,String password){
		if (userId != null && StringUtils.isNotBlank(password)) {
			SysUser user = SysUser.dao.findById(userId);
			if ((user.getStr("password").equals(HashKit.sha1(password)))) {
				return true; 
			}else {
				return false;
			}
		}else {
			return false;
		}
		
	}
	
	
	/**
	* @author:zhaozhongyuan 
	* @Description:根据userID 获取所属机构ID
	* @return int   
	* @date 2017年5月22日 下午7:39:09  
	*/
	public static int getBelongOrgId(int userId){
		SysUser user = SysUser.dao.findById(userId);
		if (user!=null) {
			return user.getInt("belong_org_id");
		}else {
			return -1;
		}
		
	}

}
