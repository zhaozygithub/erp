package com.dlcat.core.model;

import java.util.List;

import com.dlcat.common.BaseModel;
import com.dlcat.common.utils.StringUtils;
import com.jfinal.plugin.activerecord.Db;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ToCodeLibrary extends BaseModel<ToCodeLibrary> {
	public static final ToCodeLibrary dao = new ToCodeLibrary().dao();
	/**
	 * 根据code_no查询有效字典映射列表
	 * @param codeNo	字典表码值
	 * @param isEffectStatus	状态是否有效 true表示有效则限制了status=1，false或者null则不限制status
	 * @param whereList		where条件，多个条件使用and间隔，
	 * 						第一个条件前面，最后一个条件后面无and，会自动去除
	 * @return
	 */
	public static List<ToCodeLibrary> getCodeLibrariesBySQL(String codeNo,Boolean isEffectStatus, String whereList) {
		List<ToCodeLibrary> codeLibraries = null;
		if(StringUtils.isNotBlank(codeNo)){
			codeNo = "'"+codeNo+"'";
			String statusWhere = "";
			if(isEffectStatus != null && isEffectStatus){
				statusWhere = " status=1 and ";
			}
			String sql = "select * from to_code_library where  "+statusWhere+" code_no="+codeNo+" and ";
			if(StringUtils.isNotBlank(whereList)){
				whereList = whereList.trim();
				if(whereList.endsWith("and")){
					whereList = whereList.substring(0, whereList.length()-3);
				}
				if(whereList.startsWith("and")){
					whereList = whereList.substring(3, whereList.length());
				}
			}else{
				whereList = "";
				sql = sql.trim();
				sql = sql.substring(0, sql.length()-3);
			}
			sql +=whereList;
			codeLibraries = getCodeLibrariesBySQL(sql);
		}
		return codeLibraries;
	}
	
	/**
	 * 根据SQL语句查询字典映射列表
	 * @param codeNo 	字典表码值
	 * @param isEffectStatus 	状态是否有效 true表示有效则限制了status=1，false或者null则不限制status
	 * @return
	 * @author masai
	 * @time 2017年4月20日 上午10:13:03
	 */
	public static List<ToCodeLibrary> getCodeLibrariesBySQL(String codeNo,Boolean isEffectStatus){
		return getCodeLibrariesBySQL(codeNo,isEffectStatus,null);
	}
	
	/**
	 * 根据SQL语句查询字典映射列表
	 * @param sql
	 * @return
	 */
	public static List<ToCodeLibrary> getCodeLibrariesBySQL(String sql) {
		List<ToCodeLibrary> codeLibraries=ToCodeLibrary.dao.find(sql);
		return codeLibraries;
	}
}
